
import {isComicApp, isWeixin, isYueduApp, isLofter, isSnail, isMusic, isYixin} from 'nw-detect';
import Weixin from './wechat';
import {
    snailCallHandler,
    snailRegisterHandler,
    comicCallHandler,
    schemaCallHandler,
    readRegisterHandler,
    readCallHandler,
    lofterCallHandler,
    lofterSupport,
} from 'nejsbridge';
import objectAssign from 'object-assign';
import {compareVersion} from 'nw-toolkits/es/version-compare';
// import {lofterShareConfig, lofetrShare} from './appShareApi';
import {showGuide} from './guide';
import {shareLofterInWechat} from './wechat/lofter';

const callApp = (schemeUrl) => {
    var iframe = document.createElement("iframe");
    iframe.style.border = "none";
    iframe.style.width = "1px";
    iframe.style.height = "1px";
    iframe.src = schemeUrl;
    document.body.appendChild(iframe);
    window.setTimeout(function(){
        document.body.removeChild(iframe);
    }, 2000)
}

let weixinInstance;
let shareData;
let callback;

export const setOrUpdate = (pshareData, callback_) => {
    const isInitialSetup = !callback;

    callback = callback_ || function() {};

    shareData = {
        text: pshareData.title,
        link: window.location.href,
        ...pshareData
    };

    if (/\.png/.test(shareData.picurl)) {
        if (shareData.picurl.indexOf('#') === -1) {
            if (shareData.picurl.indexOf('?') === -1) {
                shareData.picurl += '?';
            } else {
                shareData.picurl += '&';
            }
            shareData.picurl += 'type=jpg';
        }
    }

    if (/[^\d]/.test(shareData.activityId)) {
        throw new Error('activityId 只能由数字组成');
        return;
    }

    switch(true) {

        case isYixin():
        case isWeixin():
            // 微信内，lofter域名的网页不在微信白名单内，无法直接使用微信的jsbridge设置，分享参数设置需要特殊处理
            if (window.location.host.indexOf('lofter.com') >= 0) {
                shareLofterInWechat(shareData, callback_);
                return;
            }
            if (weixinInstance) {
                weixinInstance.setData({
                    data: shareData,
                    callback: callback_
                });
                return;
            }

            const JSBridgeName = isWeixin() ? 'WeixinJSBridge' : 'YixinJSBridge';

            weixinInstance = new Weixin({
                data: shareData,
                JSBridgeName,
                callback
            });

            break;

        case isSnail():
            const snailData = {
                activity: shareData.activityId,
                channel: ['wechatFriend','wechatTimeline','qqZone','qqFriend','weibo'],
                default: {
                    title: shareData.title,
                    description: shareData.description,
                    image: shareData.picurl,
                    url: shareData.link
                },
                weibo: {
                    description: shareData.text || shareData.title,
                    image: shareData.picurl
                }
            }
            snailRegisterHandler('shareComplete', function (json) {
                var ua = navigator.userAgent
                if (ua.indexOf('Android') > -1 || ua.indexOf('Adr') > -1) {
                    if(json.result){
                        callback();
                    }
                } else {
                    if(json.result && json.result === 'true'){
                        callback();
                    }
                }
            });
            snailCallHandler('setShareConfig2', snailData);
            break;

        case isComicApp():
            shareData.activity = shareData.activityId;

            if (isInitialSetup && navigator.userAgent.match(/NEJSBridge\/([\d.]+)\b/)) {
                callApp('neteasecomic://share/support');

                window.sendShareResult = (platform, isOk) => {
                    if (callback) {
                        callback({
                            code: isOk === 'true' ? 0 : -1,
                            platform
                        });
                    }
                };

                window.getShareContent = () => {};
            }

            comicCallHandler('setShareConfig', shareData);
            break;

        case isLofter():

            const lofterData = {
                "id": shareData.activityId,
                "url": shareData.link,
                "content": {
                    "weiboImg": shareData.picurl,
                    "weiboDesc": `${shareData.text} ${shareData.link}`,
                    "fImg": shareData.picurl,
                    "fTitle": shareData.title,
                    "fDesc": shareData.description,
                    "domains": []
                }
            }
            if (shareData.lofter) {
                lofterData.content.lofter = shareData.lofter;
            }
            // 市集webview只会在商详页等页面展示分享按钮，在卡牌页导致隐藏，此处增加调用分享则显示菜单逻辑
            if (lofterSupport('showActionMenu')) {
                lofterCallHandler('showActionMenu')
            }
            // lofterShareConfig(lofterData);
            lofterCallHandler('saveShareContent', lofterData)
            if (lofterSupport('njb_cbShareResult')) {
                lofterCallHandler('njb_cbShareResult', callback)
            }
            break;

        case isMusic():

            callApp('orpheus://settopbutton?icon=share&callback=onShare()&show=true');

            window.onShare = function() {
                const _options = {
                    title: shareData.title,
                    text: shareData.text,
                    link: shareData.link,
                    subTitle: shareData.description,
                    picUrl: shareData.picurl ? shareData.picurl : undefined
                };

                let _arr = [];
                _arr.push(encodeURIComponent(_options.text));
                _arr.push(encodeURIComponent(_options.picUrl));
                _arr.push(encodeURIComponent(_options.link));
                _arr.push(encodeURIComponent(_options.title));
                _arr.push(encodeURIComponent(_options.subTitle));
                callApp('orpheus://share/'+_arr.join('/'));

                callback();
            };
            break;
        case isYueduApp():
            if(compareVersion(navigator.userAgent.match(/PRIS.*?\/([\d.]+)\b/)[1], '5.7.0') >= 0) {
                readRegisterHandler('shareComplete', callback);
                const yueduData = objectAssign({}, shareData, {
                    activity: shareData.activityId,
                    channel: shareData.channel || "['_share_weixin','_share_weixinquan','_share_yixin','_share_yixinquan','_share_tsina','_share_qqfriend','_share_qzone','_share_ttengxun','_share_alipay']"
                })
                console.log(yueduData);
                readCallHandler('setShareConfig', yueduData)
            }
        break;
    }
}

export const share = (data, callback_) => {
    const shareDataLocal = data || shareData;

    if (!shareDataLocal) {
        return;
    }


    if (callback_) {
        callback = callback_;
    }

    callback = callback || function() {};

    if (isComicApp()) {
        comicCallHandler('share', shareDataLocal, callback);
        return;
    }

    if (isSnail()) {
        const snailData = {
            activity: shareDataLocal.activityId,
            default: {
                title: shareDataLocal.title,
                description: shareDataLocal.description,
                image: shareDataLocal.picurl,
                url: shareDataLocal.link
            },
            weibo: {
                description: shareDataLocal.text || shareDataLocal.title,
                image: shareDataLocal.picurl
            }
        }
        snailCallHandler('share2', snailData);
        return;
    }

    if(isLofter()){
        const lofterData = {
            "id": shareDataLocal.activityId,
            "url": shareDataLocal.link,
            "content": {
                "weiboImg": shareDataLocal.picurl,
                "weiboDesc": `${shareDataLocal.text} ${shareDataLocal.link}`,
                "fImg": shareDataLocal.picurl,
                "fTitle": shareDataLocal.title,
                "fDesc": shareDataLocal.description,
                "domains": []
            }
        }
        if (data.lofter) {
            lofterData.content.lofter = data.lofter;
        }
        // 支持新版jsbridge分享
        if (lofterSupport('njb_share')) {
            lofterCallHandler('njb_share', {
                shareCnt: lofterData
            })
        } else {
            // 使用老版jsbridge分享
            lofterCallHandler('saveShareContent', {
                shareCnt: lofterData
            })
            lofterCallHandler('showMenu')
        }
        if (lofterSupport('njb_cbShareResult')) {
            lofterCallHandler('njb_cbShareResult', callback)
        }
        return;
    }

    if (isWeixin() || isYixin()) {
        if (weixinInstance) {
            const props = {
                data,
                callback: callback_
            };

            weixinInstance.setData(props);
        }
        showGuide();
        return;
    }

    if (isYueduApp()) {
        readRegisterHandler('shareComplete', callback);
        const yueduData = objectAssign({}, shareDataLocal, {
            activity: shareDataLocal.activityId,
            channel: shareDataLocal.channel || "['_share_weixin','_share_weixinquan','_share_yixin','_share_yixinquan','_share_tsina','_share_qqfriend','_share_qzone','_share_ttengxun','_share_alipay']"
        })
        readCallHandler('share', yueduData)
        return;
    }

    if (navigator.share) {
        navigator.share({
            title: shareDataLocal.title,
            text: shareDataLocal.description,
            url: shareDataLocal.link
        })
        .then(() => {
            callback();
        })
        .catch((error) => console.log('Error sharing', error));
    }

}