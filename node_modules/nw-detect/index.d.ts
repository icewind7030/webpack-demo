export function isWeixin(): boolean;

export function isYixin(): boolean;

export function isComicApp(): boolean;

export function isXiaomi(): boolean;

export function isiPad(): boolean;

export function isYueduApp(): boolean;

export function isSnail(): boolean;

export function isMusic(): boolean;

export function isLofter(): boolean;

export function ios(): boolean;

export function isIos(): boolean;

export function isApp(): boolean;

export function isQQ(): boolean;

export function isUpIos9(): boolean;

export function isUpIos11(): boolean;

export function isWeibo(): boolean;

export function isAndroid(): boolean;

/**
 * 2022-03-25 优化本方法，优先读取localStorage中储存的特性检测结果，同时保证结果返回是同步的
 * 如果无储存结果，异步去计算webp支持情况并更新localStorage
 * @returns boolean 当前浏览器环境是否支持webp
 */
export function isSupportWebp(): boolean;

export function isSupportWebpAsync(): Promise<boolean>;

/**
 * 异步返回，通过JSBridge等方式，严格的检查当前H5运行环境是否为Lofter App内
 * Promise的返回值为number类型，只可能为 0 | 1 | 2这三个值之一
 * 如果当前不在客户端内，resolve 0
 * 如果当前在客户端内，并且版本高于6.8.2，resolve 1
 * 如果当前在客户端版本内，但是版本低于6.8.2，resolve 2
 * @param options
 * @param options.isDev 是否为开发环境，默认为false，传入true则表示当前为开发环境，Promise会resolve 1
 * @returns Promise<0|1|2>
 * */
export function isInLofter(
  options?: {
    isDev: false,
  }
): Promise<0|1|2>;

/**
 * 通过UA获取lofter端内的版本号
 */
export function getLofterVersion(): string;

/**
 * 通过UA获取蜗牛端内的版本号
 */
export function getSnailVersion(): string;

/**
 * 格式化版本号，变成可比较大小的数字
 */
export function formateVersion(
  version: string
): boolean;

/**
 * 比较2个字符串版本号，返回版本号1-版本号2的结果
 */
export function compareVersion (
  version1: string,
  version2: string
): number;

/**
 * 判断当前客户端内版本号是否大于等于给定的版本号
 * 支持Lofter和蜗牛客户端
 */
export function isUpAppVersion (version: string): boolean;
